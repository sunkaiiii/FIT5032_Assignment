@model  IEnumerable<FIT5032_Assignment.Models.NearByCourseViewModel>
@{
    ViewBag.Title = "NearByClasses";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>
    <style>
        /* Set the size of the div element that contains the map */
        #map {
            height: 600px; /* The height is 400 pixels */
            width: 100%; /* The width is the width of the web page */
        }
    </style>
</head>
<h2>NearByClasses</h2>
<div id="map"></div>


<script>
    function initMap() {
        var modelData = @Html.Raw(Json.Encode(Model));
      var uluru = {lat: 0, lng: 0};
      var map = new google.maps.Map(
          document.getElementById('map'), { zoom: 15, center: uluru });
        infoWindow = new google.maps.InfoWindow();
        map.setZoom(15);
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(
                (position) => {
                    const pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude,
                    };
                    modelData.forEach(course => {
                        const courseLocation={
                            lat: course["LocationLatitude"],
                            lng: course["LocationLongitude"],
                        };
                        console.debug(courseLocation)
                        const marker = new google.maps.Marker({
                            position: courseLocation, map: map, title: course["CourseName"], animation: google.maps.Animation.DROP, label: course["CourseName"] });
                        marker.addListener("click", () => {
                            window.location.href = "/TrainingCourses/Details/" + course["CourseId"]
                        })
                    })
                    infoWindow.setPosition(pos);
                    infoWindow.setContent("Current Location");
                    infoWindow.open(map);
                    map.setCenter(pos);
                },
                () => {
                    handleLocationError(true, infoWindow, map.getCenter());
                }
            );
        } else {
            // Browser doesn't support Geolocation
            handleLocationError(false, infoWindow, map.getCenter());
        }
    }
    //initMap();


    function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(
            browserHasGeolocation
                ? "Error: The Geolocation service failed."
                : "Error: Your browser doesn't support geolocation."
        );
        infoWindow.open(map);
    }

</script>

<script src="https://maps.googleapis.com/maps/api/js?key=@System.Configuration.ConfigurationManager.AppSettings["GoogleApiKey"]&callback=initMap">
</script>

