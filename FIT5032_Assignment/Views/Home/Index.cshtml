
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*the style is referenced on https://www.w3schools.com/howto/howto_css_hero_image.asp*@
<style>

    .main_page {
        /* Use "linear-gradient" to add a darken background effect to the image (photographer.jpg). This will make the text easier to read */
        background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("Content//Images/home_page_background.jpg");
        /* Set a specific height */
        height: 800px;
        width: 100%;
        /* Position and center the image to scale nicely on all screens */
        background-position: center;
        background-repeat: no-repeat;
        background-size: cover;
        position: relative;
    }

    /* Place text in the middle of the image */
    .main_text {
        text-align: center;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        color: white;
    }

    .button_text {
        color: black;
        background-color: azure;
        padding: 12px;
        border-radius: 8px;
        font-weight: bold;
        margin-top: 12px;
        margin-left: 8px;
        margin-right: 8px;
        box-shadow: 0px 0px 3px 3px #BBBBBBBB, 0px 0px 6px 6px #99999999;
    }
</style>
<div class="main_page">
    <div class="main_text">
        <h1 class="typewrite" data-period="2000" data-type='[ "Welcome To Vibrant Your Body!" ]'>
            <p>Sign up now</p>
            <h1></h1>
            @Html.ActionLink("Sign up", "Register", "Account", null, new { @class = "button_text" })
            @Html.ActionLink("Sign in", "Login", "Account", null, new { @class = "button_text" })
    </div>
</div>

@*typing animation is referencing on https://codepen.io/hi-im-si/pen/DHoup*@
<script>
    var TxtType = function (el, toRotate, period) {
        this.toRotate = toRotate;
        this.el = el;
        this.loopNum = 0;
        this.period = parseInt(period, 10) || 2000;
        this.txt = '';
        this.tick();
        this.isDeleting = false;
    };

    TxtType.prototype.tick = function () {
        var i = this.loopNum % this.toRotate.length;
        var fullTxt = this.toRotate[i];

        if (this.isDeleting) {
            this.txt = fullTxt.substring(0, this.txt.length - 1);
        } else {
            this.txt = fullTxt.substring(0, this.txt.length + 1);
        }

        this.el.innerHTML = '<span class="wrap">' + this.txt + '</span>';

        var that = this;
        var delta = 200 - Math.random() * 100;

        if (this.isDeleting) { delta /= 2; }

        if (!this.isDeleting && this.txt === fullTxt) {
            delta = this.period;
            this.isDeleting = true;
        } else if (this.isDeleting && this.txt === '') {
            this.isDeleting = false;
            this.loopNum++;
            delta = 500;
        }

        setTimeout(function () {
            that.tick();
        }, delta);
    };

    window.onload = function () {
        var elements = document.getElementsByClassName('typewrite');
        for (var i = 0; i < elements.length; i++) {
            var toRotate = elements[i].getAttribute('data-type');
            var period = elements[i].getAttribute('data-period');
            if (toRotate) {
                new TxtType(elements[i], JSON.parse(toRotate), period);
            }
        }
        // INJECT CSS
        var css = document.createElement("style");
        css.type = "text/css";
        css.innerHTML = ".typewrite > .wrap { border-right: 0.08em solid #fff}";
        document.body.appendChild(css);
    };
</script>